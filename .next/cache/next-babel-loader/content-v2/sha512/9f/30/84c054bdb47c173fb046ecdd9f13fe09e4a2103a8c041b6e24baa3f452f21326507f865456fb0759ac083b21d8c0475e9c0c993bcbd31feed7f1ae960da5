{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\roy\\\\Desktop\\\\ReactJS Training\\\\nextjs-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\n// object id converts strinng to mongo objid\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    id: props.meetupData._id,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/roy/Desktop/ReactJS Training/nextjs-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","_id","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AACiD;AAEjD,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,EAAE,EAAEF,KAAK,CAACC,UAAN,CAAiBE,GAFvB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,IAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,OAJ5B;AAKE,IAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBK;AALhC;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;KAAMP,a;;AAuDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\"; // object id converts strinng to mongo objid\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      id={props.meetupData._id}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://rdelosreyesdev:rptdr007@cluster0.lifeatf.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray(); // fetch all, id field only, to array\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })), // convert to params\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data\r\n  const meetupid = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://rdelosreyesdev:rptdr007@cluster0.lifeatf.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupCollection.findOne({\r\n    _id: new ObjectId(meetupid),\r\n  }); // fetch all, id field only, to array\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n        description: selectedMeetup.description,\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}